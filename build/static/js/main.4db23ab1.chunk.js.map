{"version":3,"sources":["components/header/header.js","components/footer/footer.js","actions/types.js","reducers/usersReducer.js","reducers/index.js","components/users/showUsers.js","actions/userActions.js","components/users/form.js","components/users/addUsers.js","components/routes/routes.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","reactstrap_es","className","NavLink","to","id","navbar","React","Component","Footer","FETCH_USERS","NEW_USER","initialState","items","combineReducers","users","state","arguments","length","undefined","action","type","Object","objectSpread","payload","ShowUsers","this","props","fetchUsers","map","user","key","scope","name","email","gender","phone","dob","responsive","hover","striped","connect","dispatch","fetch","then","response","json","result","UserForm","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fname","lname","redirect","handleChange","bind","assertThisInitialized","onSubmit","e","setState","defineProperty","target","value","_this2","preventDefault","first_name","lastname","addUsers","setTimeout","Redirect","for","placeholder","onChange","label","onClick","method","body","catch","err","console","log","alert","AddUsers","Link","users_form","Routes","Route","path","exact","component","App","middleware","thunk","store","createStore","rootReducer","applyMiddleware","apply","es","BrowserRouter","header_header","routes","footer_footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4db23ab1.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Navbar,NavbarBrand,Nav,NavItem} from 'reactstrap';\r\nimport './header.css';\r\nimport { NavLink} from 'react-router-dom';\r\n\r\nclass Header extends React.Component{\r\n    render(){\r\n        return(\r\n            <Navbar className=\"header-container\">\r\n                <NavbarBrand><NavLink to=\"/\" id =\"logo\">Track Users</NavLink></NavbarBrand>\r\n                <Nav navbar>\r\n                <NavItem>\r\n                    <NavLink to=\"/add\" id=\"nav-item\">ADD USER</NavLink>\r\n                </NavItem>\r\n                </Nav>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {Container} from 'reactstrap';\r\nimport './footer.css';\r\n\r\nclass Footer extends React.Component{\r\n    render(){\r\n        return(\r\n            <Container className=\"footer-container\">\r\n                <p className=\"text-center brand\">&copy; Demo Project</p>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","export const FETCH_USERS = \"FETCH_USERS\";\r\nexport const NEW_USER = \"NEW_USER\";","import { FETCH_USERS,NEW_USER} from '../actions/types';\r\n\r\nconst initialState = {\r\n    items:[]\r\n}\r\n\r\nexport default function(state=initialState,action){\r\n    switch(action.type){\r\n        case FETCH_USERS:\r\n            return {\r\n                ...state,\r\n                items:action.payload\r\n            }\r\n        case NEW_USER:\r\n        return {\r\n            ...state,\r\n            items:action.payload\r\n        }    \r\n        default:\r\n            return state;    \r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport usersReducer from './usersReducer';\r\n\r\nexport default combineReducers({\r\n    users:usersReducer\r\n});","import React from 'react';\r\nimport {Container,Table} from 'reactstrap';\r\nimport './users.css';\r\n//import {Link} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUsers } from '../../actions/userActions';\r\n\r\nclass ShowUsers extends React.Component{\r\n    componentWillMount(){\r\n        this.props.fetchUsers();\r\n    }\r\n    render(){\r\n        //console.log(this.props.users);\r\n        var users = this.props.users.map((user,key)=>{\r\n            return(\r\n                <tr key = {key}>\r\n                    <th scope=\"row\">{user.id}</th>\r\n                    <td>{user.name}</td>\r\n                    <td>{user.email}</td>\r\n                    <td>{user.gender}</td>\r\n                    <td>{user.phone}</td>\r\n                    <td>{user.dob}</td>\r\n              </tr>\r\n            );\r\n        });\r\n        return(\r\n            <Container className=\"main-container\">\r\n                <Table responsive hover striped>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Gender</th>\r\n                        <th>phone</th>\r\n                        <th>DOB</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users}\r\n                    </tbody>\r\n                </Table>            \r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    users:state.users.items\r\n})\r\n\r\nexport default connect(mapStateToProps,{fetchUsers})(ShowUsers);\r\n","import { FETCH_USERS, NEW_USER} from './types';\r\n\r\n\r\nexport function fetchUsers(){\r\n    return function(dispatch){\r\n        fetch(\"https://gorest.co.in/public-api/users?_format=json&access-token=QeUtQCgdsAAeCdFbhUz1h6-HdVJ30zv8xMYR\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            dispatch({\r\n                type:FETCH_USERS,\r\n                payload:json.result\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport function addUsers(user){\r\n    return function(dispatch){\r\n        fetch(\"https://gorest.co.in/public-api/users?_format=json&access-token=QeUtQCgdsAAeCdFbhUz1h6-HdVJ30zv8xMYR\",{\r\n            method:\"POST\",\r\n            body:user\r\n        })\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            dispatch({\r\n                type:NEW_USER,\r\n                payload:json.result\r\n            })\r\n        })\r\n        .catch(err =>{\r\n            console.log(err);\r\n            alert(\"something went wrong\");\r\n        })\r\n    } \r\n}","import React from 'react';\r\nimport { Container,Form, FormGroup, Label, Input, CustomInput,Button } from 'reactstrap';\r\nimport './users.css';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addUsers } from '../../actions/userActions';\r\n\r\nclass UserForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            fname:\"\",\r\n            lname:\"\",\r\n            email:\"\",\r\n            gender:\"male\",\r\n            redirect:false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    handleChange(e){\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        let user = {\r\n            \"first_name\":this.state.fname,\r\n            \"lastname\":this.state.lname,\r\n            \"email\":this.state.email,\r\n            \"gender\":this.state.gender\r\n        }\r\n        this.props.addUsers(user);\r\n        setTimeout(() => {\r\n            this.setState({\r\n                redirect:true\r\n            })\r\n        }, 3000);\r\n    }\r\n    render(){\r\n        if(this.state.redirect){\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        return(\r\n            <Container className=\"card-container\">\r\n                <Form>\r\n                <FormGroup>\r\n                    <Label for=\"first name\">First Name</Label>\r\n                    <Input type=\"text\" name=\"fname\" id=\"fname\" placeholder=\"Enter First Name\"\r\n                    value = {this.state.fname} onChange={this.handleChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"last name\">Last Name</Label>\r\n                    <Input type=\"text\" name=\"lname\" id=\"lname\" placeholder=\"Enter Last Name\"\r\n                    value = {this.state.lname} onChange={this.handleChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"email\">Email</Label>\r\n                    <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" \r\n                    value = {this.state.email} onChange={this.handleChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"name\">Gender</Label>\r\n                    <div onChange={this.handleChange}>\r\n                        <CustomInput type=\"radio\" id=\"male\" name=\"gender\" label=\"Male\" value=\"male\"/>\r\n                        <CustomInput type=\"radio\" id=\"female\" name=\"gender\" label=\"Female\" value=\"female\" />\r\n                    </div>\r\n                </FormGroup>\r\n            </Form>\r\n            <Button onClick={this.onSubmit}>Submit</Button>\r\n            </Container>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    users:state.users.items\r\n})\r\n\r\nexport default connect(mapStateToProps,{addUsers})(UserForm);\r\n","import React from 'react';\r\nimport './users.css';\r\nimport { Container,Row,Col } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport UserForm from './form';\r\n\r\nclass AddUsers extends React.Component{\r\n    render(){\r\n        return(\r\n            <Container className = \"main-container\">\r\n                <Row>\r\n                    <Col>\r\n                        <Link to=\"/\">back</Link>\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <UserForm/>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddUsers;","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport ShowUsers from '../users/showUsers';\r\nimport AddUsers from '../users/addUsers';\r\n\r\nclass Routes extends React.Component{\r\n    render(){\r\n        return(\r\n                <div>\r\n                <Route path=\"/\" exact={true} component={ShowUsers}/>\r\n                <Route path=\"/add\" exact={true} component={AddUsers}/>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Routes;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header/header';\nimport Footer from './components/footer/footer';\nimport { Provider } from 'react-redux';\nimport { createStore,applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport Routes from './components/routes/routes';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    const initialState = {};\n    const middleware = [thunk];\n    const store = createStore(rootReducer,initialState,applyMiddleware(...middleware));\n    return (\n      <Provider store={store}>\n        <Router>\n          <div>\n            <Header />\n            <Routes />\n            <Footer />\n          </div>\n        </Router>\n      </Provider>      \n    );\n  }   \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}